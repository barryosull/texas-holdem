## Done:
[x] Deal hands to players
[x] Deal cards
[x] Basic visualisation
[x] Server
	- Game stored on server
		- PHP or JS?
		- Hosting?
			- Can be ephemeral, as long as the storage of state isn't
			- Need to store the state file somewhere
			- Would need basic security
				- Ensure someone can't mess with it by posting dodgy data
				- Means the server needs to control the data
				- Need a hosting client with data storage that isn't horribly slow
				- Admin is the one that starts the game?
			- Digital ocean droplet will work, as I only need file storage
	[x] Game state stored on server
		- Triggered by button presses
	[x] Changes one client are updated in another
[x] Gracefully handle clients refreshing
    - When a client disconnects they become a new player, player 2 becomes player 1, etc . . .
    - Ideally I want it to handle it gracecfully.
        - Browser close causes player to leave
        - Refresh causes a new socket connection for the same player
[x] Show other players
	[x] Show new players
	[x] Remove old players
[x] Player seats
[x] Seats in order and Empty seats
[x] Player 1 controls the game
[x] Render downward facing cards
[x] Handle bug when same user closes one active window with others open
	- Don't allow multiple windows
[x] Player names
[x] Style it better
	- Backround colour
	- Cards in center
	- Tables are center
[x] Name stored in cookie
[x] Change name	
	- Handled via 'changeName=1' URL param
[x] Buttons in better position
[x] Refresh breaks the app for everyone, fix this
	- No longer breaks game
	- Refreshed player can no longer see cards, have to wait for next deal
	- Other players can continue as normal
[x] Introduce concept of "Round"
	[x] Dealing starts a round
	[x] At end of a round all cards are shown
[x] Folding
	- A user can fold their hand in a round at any time
	- They are out of the round
[x] Show cards after river betting is finished	
[x] Choose winning hand
	- Use this lib https://www.npmjs.com/package/poker-ranking
	- Currently installed
	- Select all active hands
	- Choose winner
	- Send message with winner and their hand
[x] Highlight winner
[x] Pretty it up some more
[x] Announce default winner of hand
	- Announce when all other hands are folded
	- Do not show cards
[x] Mobile player
	- Full screen horizontally
[x] Host it at an IP
[x] Pass control to player when host leaves
[x] Pass controls back when host returns
	- Just give the controls to the first player and remove them from the second
[x] Handle refresh
	- Emit all the events to the player that refreshed
	- Broadcasts community cards and the players current cards
[x] Remove cards of players that leave
[x] Host it at a URL
    - Hosted on a bitly URL, good enough for now
[x] Restart node process if it fails
    - Went with Supervisord, good enough
[x] Add concept of a game

## Todo:
[x] Write domain events (documentation)
    - Documentation only
    - Plan is to migrate to domain events internally, use them to build up game state
[x] Use domain events internally in system
[x] Convert deck from a VO with state into a projection
    - How to do this?
        1. Store a seed, spin up a newly shuffled deck from that seed each time a card is needed
        2. Store an event with the shuffled deck
        3. Store an event with the shuffled deck (series of ints)
    - Gonna give "1" a try
[x] Refactor into subclasses
    - The file is getting quite large
[x] Choose a dealer at the start of each round
    - Choose the next active player to the left of the current dealer
[x] Bet a sum of money
    - Display this to everyone
    - Express JS does not come with request body parsing enabled by default
        - Have to install middleware for this
        - Really strange decision
[x] Chips are put into the pot once the next cards are placed
[x] Players have chips, betting subtracts from chips
[x] Winner takes the pot
[x] Can only bet the number of chips you currently have
[x] Hide deal button in middle of round
[x] Can only bet during a round of betting
    - Disable betting once a winner is announced
    - Enable once the cards are dealt
[x] WinningByDefault also results in winning chips
[ ] Total player bet is shown, not the amount they just bet
    - It currently shows the last amount bet, not the total bet in this round
[ ] Pot is updated on bet, not on round completion
    - There's currently a bug were you can only win a pot if a round of betting has finished
    - This is a bit rubbish

[ ] Refactor game into aggregates
    - This thing is getting messy internally
    - I need to create aggregates for write operations
    - Query projections are not isolated, listening to too many events
    - Have query projections that are only used external to the domain
    
[ ] Next round cannot start until everyone has put in the same amount
    - Or a player has put in all their chips
[ ] Once you're out of a chips you're out of the game
    - Only occurs at the end of a round
[ ] Sub-streams of events for faster projections
    - Don't need all events to figure out the current hands, only events from this hand
[ ] Write tests based on domain events
[ ] Write broadcast events
    - Documentation only
    - Plan is to migrate to trigger broadcast on domain events
[ ] Chips system
    - Need a system to keep track of a players chips
    - Give everyone 1000 chips on start
    - Players bet chips on a hand
    - Winner takes the pot
    - Player is no longer dealt in when they have zero chips
[ ] Player can buy back in to a game
[ ] Add basic security
[ ] Show winning hand title 
[ ] Handle draws
	- Currently defaults to the first handle winning
	- This is fine for now, as draws are so rare
[ ] Broadcast inprogress hand on refresh
    - Old implementation was broken, so it's been deleted


